@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @marked-text;
  }

  .invisible {
    color: @faint-text;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @comment-text;

  &.syntax--documentation {
      color: @doc-text;
  }
}

.syntax--keyword {
  color: @keyword-text;

  &.syntax--control {
    color: @control-text;
  }

  &.syntax--operator {
    color: @operator-text;

    &.syntax--regexp {
      color: @regexp-operator-text;
    }

    &.syntax--dereference {
      color: @operator-dereference-text;
    }
  }

  &.syntax--other.syntax--special-method {
    color: @unit-text;
  }

  &.syntax--other {
      color: @keyword-text;

      &.syntax--unit {
        color: @unit-text;
      }

      &.syntax--important {
        color: @visibility-text;
      }
  }

  &.syntax--unsafe {
    color: @danger-text !important;
  }

  &.syntax--question-mark {
    font-weight: bold;
    color: @control-text;
  }
}

.syntax--storage {
  color: @type-text;

  &.syntax--lifetime {
      color: @lifetime-text !important;
  }

  &.syntax--generic {
      color: @generic-text;
  }

  &.syntax--visibility {
      color: @visibility-text;
  }

  &.syntax--type {
      color: @keyword-text;

      &.syntax--core {
          color: @type-text;
      }
  }

  &.syntax--modifier {
      font-style: italic;

      &.syntax--glsl {
          color: @visibility-text;
      }

      &.syntax--php {
          color: @visibility-text;
      }
  }

  &.syntax--mut, &.syntax--const, &.syntax--static {
      color: @type-keyword-text;
  }

  &.syntax--mod {
      color: @keyword-text;
  }
}

.syntax--constant {
  color: @integer-text;

  &.syntax--character.syntax--escape {
    color: @escape-text;
  }

  &.syntax--support {
    color: @control-text;

    &.syntax--js {
        color: @visibility-text;
        font-style: italic;
    }
  }
}

.syntax--storage.syntax--type.syntax--primitive.syntax--rust {
  color: @type-text !important;
}

.syntax--source.syntax--rust {
  .syntax--parameter {
    color: @method-parameter-text !important;
  }

  .syntax--macro {
    color: @control-text !important;
    font-weight: bold;
  }
}

.syntax--variable {
  color: @variable-text;

  &.syntax--interpolation {
    color: @variable-secondary;
  }

  &.syntax--parameter.syntax--function {
    color: @method-parameter-text;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red-bg;
  color: @syntax-background-color;
}

.syntax--string {
  color: @string-text;

  &.syntax--regexp {
    color: @regexp-text;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @regexp-text;
    }

    .syntax--punctuation {
      color: @regexp-punctuation-text;
    }
  }

  &.syntax--other.syntax--link {
    color: @embeded-text;
  }

  &.syntax--quoted {
    &.syntax--single {
      color: @string-frozen-text;
    }
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @deco-text;
    }

    &.syntax--string {
        color: @punctuation-text;
    }

    &.syntax--variable {
        color: @variable-secondary;
    }

    &.syntax--method-parameters {
        color: @method-parameter-text;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @integer-text;
    }

    &.syntax--bold {
      color: @deco-text;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @deco-text;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: @embeded-text;
  }

  &.syntax--symbol.syntax--rust {
    color: @namespace-and-dereference-text;
  }
}

.syntax--support {
  &.syntax--class {
    color: @type-text;
  }

  &.syntax--type {
    color: @type-text;
  }

  &.syntax--function  {
    color: @function-text;

    &.syntax--any-method {
      color: @method-text;
    }

    &.syntax--string {
      color: @string-function-text;
    }

    &.syntax--core {
      font-weight: bold;
      color: @control-text;
    }

    &.syntax--std {
      font-weight: bold;
      color: @control-text;
    }

    &.syntax--log {
      font-weight: bold;
      color: @loger-text;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @name-text;

    &.syntax--macro {
      font-weight: bold;
      color: @control-text;
    }
  }

  &.syntax--name.syntax--type {
    color: @type-text;
  }

  &.syntax--name.syntax--lifetime {
    color: @lifetime-text !important;
  }

  &.syntax--other.syntax--inherited-class {
    font-style: italic;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @name-text;
  }

  &.syntax--name.syntax--section {
    color: @name-text;
  }

  &.syntax--name.syntax--tag {
    color: @name-text;
  }

  &.syntax--other.syntax--attribute-name {
    color: @attribute-name-text;

    &.syntax--id {
      color: @attribute-id-text;
      font-weight: bold;
    }
  }
}

.syntax--meta {
  &.type_params {
    color: @generic-bounds-lvl1;

    .type_params {
      color: @generic-bounds-lvl2;

      .type_params {
        color: @generic-bounds-lvl1;

        .type_params {
          color: @generic-bounds-lvl2;

          .type_params {
            color: @generic-bounds-lvl1;
          }
        }
      }
    }
  }

  &.syntax--link {
    color: @embeded-text;
  }

  &.syntax--require {
    color: @embeded-text;
  }

  &.syntax--selector {
    color: @integer-text;
  }

  &.syntax--separator {
    background-color: @separator-bg;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @marked-text;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @control-text;
  }

  &.syntax--deleted {
    color: @escape-text;
  }

  &.syntax--italic {
    color: @marked-text;
    font-style: italic;
  }

  &.syntax--raw {
    color: @function-text;
  }

  &.syntax--heading {
      color: @name-text;

      .syntax--punctuation.syntax--definition.syntax--heading {
        color: @type-text;
      }
  }

  &.syntax--inserted {
    color: @integer-text;
  }

  &.syntax--list {
    color: @struct-text;
  }

  &.syntax--quote {
    color: @comment-text;
  }

  &.syntax--raw.syntax--inline {
    color: @embeded-text;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
